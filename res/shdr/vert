#version 430 core
layout(location=0) in vec3 inVec;
layout(location=1) in vec4 inCol;
layout(location=2) in vec2 inTc;
layout(location=3) in vec3 inTang;
layout(location=4) in vec3 inBita;
layout(location=5) in vec3 inNorm;

uniform mat4 modlMatr, viewMatr, projMatr;

out vec2 UV;
out vec4 col;
out vec3 tang;
out vec3 bita;
out vec3 norm;
out vec4 poz;

void main(){
  poz=modlMatr * vec4(inVec,1);
  gl_Position=projMatr * viewMatr * poz;
  col=inCol;
  UV=inTc;
  tang=normalize((modlMatr * vec4(inTang,0)).rgb);
  bita=normalize((modlMatr * vec4(inBita,0)).rgb);
  norm=normalize((modlMatr * vec4(inNorm,0)).rgb);
}
